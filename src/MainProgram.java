
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.event.ActionListener;
import java.awt.event.ComponentEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import javafx.event.ActionEvent;
import javax.swing.JPanel;
import javax.swing.JSpinner;
import javax.swing.JTable;
import javax.swing.ListSelectionModel;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import sun.security.jgss.spnego.SpNegoContext;


/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author compu
 */
public class MainProgram extends javax.swing.JFrame{

    /**
     * Creates new form MainProgram
     */
    public MainProgram() {
        initComponents();
        initOtherComp();
        initdone = true;
    }

    /**
     * This method is called from within the constructor to initialise the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SearchGroup = new javax.swing.ButtonGroup();
        MenuBar = new javax.swing.JPanel();
        HomeButton = new javax.swing.JButton();
        FowardButton = new javax.swing.JButton();
        BackButton = new javax.swing.JButton();
        TitleLabel = new javax.swing.JLabel();
        MainView = new javax.swing.JPanel();
        MainMenuPage = new javax.swing.JPanel();
        TimetableButton = new javax.swing.JButton();
        RegisterButton = new javax.swing.JButton();
        SearchButton = new javax.swing.JButton();
        StudentProfileButton = new javax.swing.JButton();
        StudentProfilePage = new javax.swing.JPanel();
        FirstName = new javax.swing.JLabel();
        FirstNameInput = new javax.swing.JTextField();
        StudentDropdown = new javax.swing.JComboBox<>();
        Surname = new javax.swing.JLabel();
        SurnameInput = new javax.swing.JTextField();
        Gender = new javax.swing.JLabel();
        GenderInput = new javax.swing.JTextField();
        DoB = new javax.swing.JLabel();
        DoBInput = new javax.swing.JTextField();
        Year = new javax.swing.JLabel();
        TimetableID = new javax.swing.JLabel();
        MeritPoints = new javax.swing.JLabel();
        ConductPoints = new javax.swing.JLabel();
        BlockASubkect = new javax.swing.JLabel();
        BlockASubjectInput = new javax.swing.JTextField();
        BlockBSubject = new javax.swing.JLabel();
        BlockBSubjectInput = new javax.swing.JTextField();
        BlockCSubject = new javax.swing.JLabel();
        BlockCSubjectInput = new javax.swing.JTextField();
        BlockDSubject = new javax.swing.JLabel();
        BlockDSubjectInput = new javax.swing.JTextField();
        BlockESubject = new javax.swing.JLabel();
        BlockESubjectInput = new javax.swing.JTextField();
        BlockASubject = new javax.swing.JLabel();
        EmailAddressInput = new javax.swing.JTextField();
        MeritPointsInput = new javax.swing.JSpinner();
        ConductPointsInput = new javax.swing.JSpinner();
        EditButton = new javax.swing.JToggleButton();
        SaveButton = new javax.swing.JButton();
        StudentID = new javax.swing.JLabel();
        StudentIDInput = new javax.swing.JTextField();
        TimetableIDInput = new javax.swing.JSpinner();
        ParentIDP = new javax.swing.JLabel();
        ParentIDInputP = new javax.swing.JTextField();
        FirstNameInputP = new javax.swing.JTextField();
        FirstNameP = new javax.swing.JLabel();
        SurnameP = new javax.swing.JLabel();
        SurnameInputP = new javax.swing.JTextField();
        GenderInputP = new javax.swing.JTextField();
        GenderP = new javax.swing.JLabel();
        EmailAddressP = new javax.swing.JLabel();
        EmailAddressInputP = new javax.swing.JTextField();
        PhoneNumberP = new javax.swing.JLabel();
        PhoneNumberInputP = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        NewStudentButton = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        SReportTable = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        ParentDropdown = new javax.swing.JComboBox<>();
        NewParentButton = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        YearInput = new javax.swing.JSpinner();
        RelationP = new javax.swing.JLabel();
        RelationInputP = new javax.swing.JTextField();
        TimetablePage = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        TimetableTable = new javax.swing.JTable();
        RegisterPage = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        RegisterTable = new javax.swing.JTable();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jButton11 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jButton10 = new javax.swing.JButton();
        jButton14 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        SearchPage = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jTextField1 = new javax.swing.JTextField();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        SearchTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        MenuBar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        HomeButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home Button.png"))); // NOI18N
        HomeButton.setBorderPainted(false);
        HomeButton.setContentAreaFilled(false);
        HomeButton.setEnabled(false);
        HomeButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Home Button Pressed.png"))); // NOI18N
        HomeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HomeButtonActionPerformed(evt);
            }
        });

        FowardButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Arrow Right.png"))); // NOI18N
        FowardButton.setBorderPainted(false);
        FowardButton.setContentAreaFilled(false);
        FowardButton.setEnabled(false);
        FowardButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Arrow Right Pressed.png"))); // NOI18N
        FowardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                FowardButtonActionPerformed(evt);
            }
        });

        BackButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Arrow Left.png"))); // NOI18N
        BackButton.setBorderPainted(false);
        BackButton.setContentAreaFilled(false);
        BackButton.setEnabled(false);
        BackButton.setPressedIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Arrow Left Pressed.png"))); // NOI18N
        BackButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackButtonActionPerformed(evt);
            }
        });

        TitleLabel.setFont(new java.awt.Font("Tahoma", 0, 36)); // NOI18N
        TitleLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        TitleLabel.setText("Main Menu");
        TitleLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout MenuBarLayout = new javax.swing.GroupLayout(MenuBar);
        MenuBar.setLayout(MenuBarLayout);
        MenuBarLayout.setHorizontalGroup(
            MenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuBarLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(HomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(FowardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(238, 238, 238)
                .addComponent(TitleLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 325, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        MenuBarLayout.setVerticalGroup(
            MenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MenuBarLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(MenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(TitleLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(MenuBarLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(BackButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(FowardButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(HomeButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        MainView.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));
        MainView.setLayout(new java.awt.CardLayout());

        TimetableButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        TimetableButton.setText("Timetable");
        TimetableButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TimetableButtonActionPerformed(evt);
            }
        });

        RegisterButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        RegisterButton.setText("Current Register");
        RegisterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RegisterButtonActionPerformed(evt);
            }
        });

        SearchButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        SearchButton.setText("Search");
        SearchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchButtonActionPerformed(evt);
            }
        });

        StudentProfileButton.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        StudentProfileButton.setText("Student Profile");
        StudentProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentProfileButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout MainMenuPageLayout = new javax.swing.GroupLayout(MainMenuPage);
        MainMenuPage.setLayout(MainMenuPageLayout);
        MainMenuPageLayout.setHorizontalGroup(
            MainMenuPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainMenuPageLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(MainMenuPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(StudentProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 200, Short.MAX_VALUE)
                .addGroup(MainMenuPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(TimetableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 400, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(50, 50, 50))
        );
        MainMenuPageLayout.setVerticalGroup(
            MainMenuPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MainMenuPageLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(MainMenuPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(StudentProfileButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TimetableButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(200, 200, 200)
                .addGroup(MainMenuPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SearchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RegisterButton, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(57, Short.MAX_VALUE))
        );

        MainView.add(MainMenuPage, "Main Menu");

        FirstName.setText("First Name");

        StudentDropdown.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        StudentDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        StudentDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StudentDropdownActionPerformed(evt);
            }
        });

        Surname.setText("Surname");

        Gender.setText("Gender");

        DoB.setText("Date of Birth");

        Year.setText("Year");

        TimetableID.setText("Timetable ID");

        MeritPoints.setText("Merit Points");

        ConductPoints.setText("Conduct Points");

        BlockASubkect.setText("Block A Subject");

        BlockBSubject.setText("Block B Subject");

        BlockCSubject.setText("Block C Subject");

        BlockDSubject.setText("Block D Subject");

        BlockESubject.setText("Block E Subject");

        BlockASubject.setText("Email Address");

        EditButton.setText("Edit");
        EditButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditButtonActionPerformed(evt);
            }
        });

        SaveButton.setText("Save");
        SaveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SaveButtonActionPerformed(evt);
            }
        });

        StudentID.setText("Student ID");

        ParentIDP.setText("Parent ID");

        FirstNameP.setText("First Name");

        SurnameP.setText("Surname");

        GenderP.setText("Gender");

        EmailAddressP.setText("Email Address");

        PhoneNumberP.setText("Phone Number");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 157, Short.MAX_VALUE)
        );

        NewStudentButton.setText("New");
        NewStudentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewStudentButtonActionPerformed(evt);
            }
        });

        jScrollPane2.setViewportView(SReportTable);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Timetable");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Student Reports");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel3.setText("Parents");

        ParentDropdown.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        ParentDropdown.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        ParentDropdown.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ParentDropdownActionPerformed(evt);
            }
        });

        NewParentButton.setText("New");
        NewParentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewParentButtonActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel4.setText("Student");

        RelationP.setText("Relation");

        javax.swing.GroupLayout StudentProfilePageLayout = new javax.swing.GroupLayout(StudentProfilePage);
        StudentProfilePage.setLayout(StudentProfilePageLayout);
        StudentProfilePageLayout.setHorizontalGroup(
            StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(StudentProfilePageLayout.createSequentialGroup()
                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                .addGap(343, 343, 343)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(BlockCSubject)
                                    .addComponent(BlockDSubject)
                                    .addComponent(BlockESubject))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BlockESubjectInput)
                                    .addComponent(BlockCSubjectInput)
                                    .addComponent(BlockDSubjectInput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BlockBSubject)
                                    .addComponent(TimetableID)
                                    .addComponent(BlockASubkect))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(BlockBSubjectInput)
                                    .addComponent(BlockASubjectInput)
                                    .addComponent(TimetableIDInput, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(StudentProfilePageLayout.createSequentialGroup()
                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(Surname)
                                            .addComponent(FirstName)
                                            .addComponent(StudentID)
                                            .addComponent(DoB))
                                        .addGap(32, 32, 32)
                                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(FirstNameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(SurnameInput, javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(DoBInput)
                                            .addComponent(StudentIDInput, javax.swing.GroupLayout.DEFAULT_SIZE, 86, Short.MAX_VALUE))
                                        .addGap(18, 18, 18)
                                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(MeritPoints)
                                                    .addComponent(ConductPoints))
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(MeritPointsInput, javax.swing.GroupLayout.DEFAULT_SIZE, 60, Short.MAX_VALUE)
                                                    .addComponent(ConductPointsInput)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentProfilePageLayout.createSequentialGroup()
                                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(Gender)
                                                    .addComponent(Year))
                                                .addGap(31, 31, 31)
                                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(YearInput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(GenderInput, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                    .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                        .addComponent(BlockASubject, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(EmailAddressInput, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                        .addGap(34, 34, 34)
                                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                        .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                                            .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                                .addComponent(FirstNameP)
                                                                .addComponent(SurnameP)
                                                                .addComponent(ParentIDP))
                                                            .addGap(29, 29, 29))
                                                        .addComponent(GenderP, javax.swing.GroupLayout.Alignment.LEADING))
                                                    .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                                        .addComponent(RelationP, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(10, 10, 10)))
                                                .addGap(5, 5, 5)
                                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                                    .addComponent(FirstNameInputP, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                                                    .addComponent(SurnameInputP, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(GenderInputP, javax.swing.GroupLayout.Alignment.TRAILING)
                                                    .addComponent(RelationInputP)
                                                    .addComponent(ParentIDInputP)))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentProfilePageLayout.createSequentialGroup()
                                                .addComponent(ParentDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(NewParentButton))
                                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                                    .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                        .addGap(31, 31, 31)
                                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                                .addComponent(EmailAddressP)
                                                .addGap(22, 22, 22)
                                                .addComponent(EmailAddressInputP, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                                .addComponent(PhoneNumberP)
                                                .addGap(18, 18, 18)
                                                .addComponent(PhoneNumberInputP, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                .addComponent(StudentDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(NewStudentButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 452, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(114, 114, 114))
        );
        StudentProfilePageLayout.setVerticalGroup(
            StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                .addContainerGap(20, Short.MAX_VALUE)
                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentProfilePageLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 621, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(11, 11, 11))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentProfilePageLayout.createSequentialGroup()
                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(StudentDropdown)
                            .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(EditButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(SaveButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(NewStudentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                .addGap(96, 96, 96)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(NewParentButton)
                                    .addComponent(ParentDropdown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ParentIDInputP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ParentIDP))
                                .addGap(16, 16, 16)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(FirstNameInputP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FirstNameP))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(SurnameInputP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(SurnameP))
                                .addGap(18, 18, 18)
                                .addComponent(GenderInputP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(RelationP)
                                    .addComponent(RelationInputP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(EmailAddressInputP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentProfilePageLayout.createSequentialGroup()
                                .addGap(22, 22, 22)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(21, 21, 21)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(Year)
                                    .addComponent(YearInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(StudentIDInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(StudentID))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(GenderInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(Gender)
                                    .addComponent(FirstNameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(FirstName)
                                    .addComponent(GenderP))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(ConductPointsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(ConductPoints)
                                    .addComponent(Surname)
                                    .addComponent(SurnameInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(MeritPointsInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(MeritPoints)
                                    .addComponent(DoBInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(DoB)
                                    .addComponent(EmailAddressP))))
                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BlockASubject, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(EmailAddressInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, StudentProfilePageLayout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(PhoneNumberP)
                                    .addComponent(PhoneNumberInputP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(30, 30, 30)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(TimetableIDInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(TimetableID))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BlockASubjectInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BlockASubkect))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BlockBSubjectInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BlockBSubject)))
                            .addGroup(StudentProfilePageLayout.createSequentialGroup()
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BlockCSubjectInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BlockCSubject))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BlockDSubjectInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BlockDSubject))
                                .addGap(18, 18, 18)
                                .addGroup(StudentProfilePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(BlockESubjectInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(BlockESubject))))
                        .addGap(36, 36, 36))))
        );

        MainView.add(StudentProfilePage, "Student Profile");

        TimetableTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane3.setViewportView(TimetableTable);

        javax.swing.GroupLayout TimetablePageLayout = new javax.swing.GroupLayout(TimetablePage);
        TimetablePage.setLayout(TimetablePageLayout);
        TimetablePageLayout.setHorizontalGroup(
            TimetablePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimetablePageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 1080, Short.MAX_VALUE)
                .addContainerGap())
        );
        TimetablePageLayout.setVerticalGroup(
            TimetablePageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TimetablePageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                .addContainerGap())
        );

        MainView.add(TimetablePage, "Timetable");

        jScrollPane4.setViewportView(RegisterTable);

        jButton2.setText("Add Conduct Points");

        jButton3.setText("Add Merit Points");

        jButton8.setText("View Student Profile");

        jButton9.setText("Mark Selected As Absent");

        jButton11.setText("Email Selected Students");

        jButton13.setText("Email All Students");

        jButton10.setText("Add Reports to Selected");

        jButton14.setText("Mark Selected As Present");

        jButton4.setText("Remove Conduct Points");

        jButton5.setText("Remove Merit Points");

        javax.swing.GroupLayout RegisterPageLayout = new javax.swing.GroupLayout(RegisterPage);
        RegisterPage.setLayout(RegisterPageLayout);
        RegisterPageLayout.setHorizontalGroup(
            RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterPageLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jButton2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton9, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 155, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton11, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton13, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(244, Short.MAX_VALUE))
        );
        RegisterPageLayout.setVerticalGroup(
            RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegisterPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 685, Short.MAX_VALUE)
                    .addGroup(RegisterPageLayout.createSequentialGroup()
                        .addGroup(RegisterPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(RegisterPageLayout.createSequentialGroup()
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton9, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton8, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton11, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(RegisterPageLayout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton14, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton13, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        MainView.add(RegisterPage, "Current Register");

        jButton1.setText("Search");

        jTextField1.setToolTipText("");

        SearchGroup.add(jRadioButton1);
        jRadioButton1.setText("Students");
        jRadioButton1.setName(""); // NOI18N

        SearchGroup.add(jRadioButton2);
        jRadioButton2.setText("Reports");
        jRadioButton2.setToolTipText("");
        jRadioButton2.setName(""); // NOI18N

        SearchGroup.add(jRadioButton3);
        jRadioButton3.setText("Staff");
        jRadioButton3.setName(""); // NOI18N

        SearchGroup.add(jRadioButton4);
        jRadioButton4.setText("Parents");
        jRadioButton4.setName(""); // NOI18N

        SearchTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5", "Title 6", "Title 7", "Title 8"
            }
        ));
        jScrollPane1.setViewportView(SearchTable);

        javax.swing.GroupLayout SearchPageLayout = new javax.swing.GroupLayout(SearchPage);
        SearchPage.setLayout(SearchPageLayout);
        SearchPageLayout.setHorizontalGroup(
            SearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 938, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(SearchPageLayout.createSequentialGroup()
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 450, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jButton1)))
                .addContainerGap(152, Short.MAX_VALUE))
        );
        SearchPageLayout.setVerticalGroup(
            SearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SearchPageLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(SearchPageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4)
                    .addComponent(jButton1))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 644, Short.MAX_VALUE)
                .addContainerGap())
        );

        MainView.add(SearchPage, "Search");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(MainView, javax.swing.GroupLayout.PREFERRED_SIZE, 1104, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MenuBar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(MenuBar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 43, Short.MAX_VALUE)
                .addComponent(MainView, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void HomeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HomeButtonActionPerformed
        newPage("Main Menu");
        HomeButton.setEnabled(false);
    }//GEN-LAST:event_HomeButtonActionPerformed

    private void FowardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_FowardButtonActionPerformed
        FowardButton.setEnabled(customstack.stateFowardButton());
        setPage(customstack.nextPage());
        BackButton.setEnabled(true);
    }//GEN-LAST:event_FowardButtonActionPerformed

    private void BackButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackButtonActionPerformed
        BackButton.setEnabled(customstack.stateBackButton());
        setPage(customstack.prevPage());
        FowardButton.setEnabled(true);
    }//GEN-LAST:event_BackButtonActionPerformed

    private void StudentProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentProfileButtonActionPerformed
        newPage("Student Profile");
        pregenStudentProfile();
    }//GEN-LAST:event_StudentProfileButtonActionPerformed

    private void TimetableButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TimetableButtonActionPerformed
        newPage("Timetable");        
    }//GEN-LAST:event_TimetableButtonActionPerformed

    private void SearchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchButtonActionPerformed
        newPage("Search");
    }//GEN-LAST:event_SearchButtonActionPerformed

    private void RegisterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RegisterButtonActionPerformed
        newPage("Current Register");
    }//GEN-LAST:event_RegisterButtonActionPerformed

    private void NewStudentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewStudentButtonActionPerformed
        if(!newstudent){
            newStudent();
        }
    }//GEN-LAST:event_NewStudentButtonActionPerformed

    private void NewParentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewParentButtonActionPerformed
        
    }//GEN-LAST:event_NewParentButtonActionPerformed

    private void ParentDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ParentDropdownActionPerformed
        if(loaded){                                                           //This is as the action event automatically gets during creation of the Student Profile
            generateParentFields();                                            //editing of the dropdown, this should really only be done when we slect a item
        }
    }//GEN-LAST:event_ParentDropdownActionPerformed

    private void EditButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditButtonActionPerformed
        if(StudentDropdown.getSelectedIndex()!=0){
            if(EditButton.getModel().isSelected()){
                setEditButton(true);
            }
            else{
                setEditButton(false);
            }
        }
        else{
            EditButton.setSelected(false);
        }
        if(newstudent){
            cancelNewStudent();
        }
    }//GEN-LAST:event_EditButtonActionPerformed

    private void StudentDropdownActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StudentDropdownActionPerformed
        if(newstudent){
            cancelNewStudent();
        }
        if(initdone){                                                           //This is as the action event automatically gets called when the creation and
            refreshStudentProfile();                                            //editing of the dropdown, this should really only be done when we slect a item
                                                                                //So initdone will be true after the initial initiation is complete.
            setEditButton(false);                                               //We rebuild and set edit button to false so when people click off mid edit
            clearAllParentsFields();                                            //We can cancel their edit
        }                                                                       
    }//GEN-LAST:event_StudentDropdownActionPerformed

    private void SaveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SaveButtonActionPerformed
        saveStudentEdits();
    }//GEN-LAST:event_SaveButtonActionPerformed
   
    private void newPage(String Page){
        HomeButton.setEnabled(true);
        BackButton.setEnabled(true);
        FowardButton.setEnabled(false);
        CardLayout cl = (CardLayout)MainView.getLayout();
        cl.show(MainView, Page);
        customstack.pushPage(Page);
        TitleLabel.setText(Page);
    }
    
    private void setPage(String Page){
        CardLayout cl = (CardLayout)MainView.getLayout();
        cl.show(MainView, Page);
        TitleLabel.setText(Page);
        HomeButton.setEnabled(true);
        switch (Page) {
            case "Main Menu":
                HomeButton.setEnabled(false);
                break;
            case "Register":
                pregenRegister();
                break;
            case "Timetable":
                pregenTimetable();
                break;
            case "Student Profile":
                pregenStudentProfile();
                break;
        }
        
    }
    
    
    private void setEditButton(Boolean state){
        changeStateParentsFields(state);
        changeStateStudentFields(state);
        EditButton.setSelected(state);
        if(state){
            EditButton.setText("Cancel");
        }
        else{
            EditButton.setText("Edit");
        }
    }
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainProgram().setVisible(true);
            }
        });
        
        //java.awt.EventQueue.invokeLater();
        
    }
    
    private void initOtherComp() {
        //jtf.add();
        //(JSpinner.DefaultEditor) Sp.getEditor()).getTextField().setEditable(state);
        ((JSpinner.DefaultEditor) ConductPointsInput.getEditor()).getTextField().setForeground(Color.RED);
        ((JSpinner.DefaultEditor) MeritPointsInput.getEditor()).getTextField().setForeground(Color.GREEN);
        
        Stf.add(StudentIDInput);                                                            //Reason why i am setting StudentID to be a text box instead of a spinner is that the user
        Stf.add(FirstNameInput);                                                            // Will never be able to edit the studentID so there is not going to be a need
        Stf.add(SurnameInput);                                                              // To include the spinners;
        Stf.add(DoBInput);                                                                  //This will add all of the JTextFields into an array so i can iterate though them easily
        Stf.add(GenderInput);
        Stf.add(EmailAddressInput);
        Stf.add(BlockASubjectInput);
        Stf.add(BlockBSubjectInput);
        Stf.add(BlockCSubjectInput);
        Stf.add(BlockDSubjectInput);
        Stf.add(BlockESubjectInput);
        
        Ssp.add(ConductPointsInput);
        Ssp.add(MeritPointsInput);
        Ssp.add(YearInput);
        Ssp.add(TimetableIDInput);
        
        Ptf.add(ParentIDInputP);
        Ptf.add(FirstNameInputP);
        Ptf.add(SurnameInputP);
        Ptf.add(GenderInputP);
        Ptf.add(RelationInputP);
        Ptf.add(EmailAddressInputP);
        Ptf.add(PhoneNumberInputP);
        
        StudentDropdown.removeAllItems();
        ParentDropdown.removeAllItems();
        
        StudentIDInput.setEditable(false);
        ParentIDInputP.setEditable(false);
        changeStateStudentFields(false);
        
        DefaultTableModel stm = new DefaultTableModel();
        stm.addColumn("Date");
        stm.addColumn("Reason");
        stm.addColumn("Staff Name");
        SReportTable.setModel(stm);
        SReportTable.setColumnSelectionAllowed(false);
        SReportTable.setCellSelectionEnabled(false);
        SReportTable.setRowSelectionAllowed(false);
        SReportTable.getTableHeader().setReorderingAllowed(false);
        SReportTable.getTableHeader().setResizingAllowed(false);
        SReportTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        SReportTable.getColumnModel().getColumn(0).setPreferredWidth(75);
        SReportTable.getColumnModel().getColumn(1).setPreferredWidth(452-75-120);
        SReportTable.getColumnModel().getColumn(2).setPreferredWidth(120);
        
        DefaultTableModel rtm = new DefaultTableModel();
        
        rtm.addColumn("Name");
        rtm.addColumn("Surname");
        rtm.addColumn("<html>Previous Lesson</html>");
        rtm.addColumn(" Current Lesson ");
        RegisterTable.setModel(rtm);
        RegisterTable.setColumnSelectionAllowed(false);
        RegisterTable.getTableHeader().setReorderingAllowed(false);
        RegisterTable.getTableHeader().setResizingAllowed(false);
        RegisterTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
        RegisterTable.getColumnModel().getColumn(3).setPreferredWidth(75);
        RegisterTable.getColumnModel().getColumn(2).setPreferredWidth(75);
        RegisterTable.getColumnModel().getColumn(1).setPreferredWidth(175);
        RegisterTable.getColumnModel().getColumn(0).setPreferredWidth(175);
        RegisterTable.getTableHeader().setPreferredSize(new Dimension(
                RegisterTable.getColumnModel().getTotalColumnWidth(),50));
    }    
    
    private void pregenStudentProfile(){
        initdone = false;
        rebuildStudentDropdown();
        clearAllParentsFields();
        clearAllStudentFields();
        StudentIDInput.setText("");
        DefaultTableModel model = (DefaultTableModel) SReportTable.getModel();
        model.setRowCount(0);
        initdone = true;
    }
    
    private void pregenTimetable(){
        
    }
    
    private void pregenRegister(){
        
    }
    
    private void refreshStudentProfile(){
        loaded = false;
        try{
            String username = USERNAME;                                                                      //Sets up the database connection
            String password = PASSWORD;                                                                      //Sets up the password
            String host = HOST;
            Connection conn = DriverManager.getConnection(host,username,password);                                  //Tries to connect to database, if fails go to catch
            
            int id = (StudentDropdown.getSelectedIndex());                                                        //As the combobox will be created in order (with ID 1 in index 1)

            generateStudentFields();
            
            generateReports();
            
            rebuildParentDropdown();
            
            conn.close();                                                                                        //Will close the connection after it is finished
        }
        catch(SQLException e){
            System.out.println(e.getMessage());                                                                //Output error to console
        }
        loaded = true;
    }
    
    private void generateStudentFields(){
        if(StudentDropdown.getSelectedIndex()==0){
            clearAllStudentFields();
        }
        else{
            try{
                String username = USERNAME;                                                                      //Sets up the database connection
                String password = PASSWORD;                                                                      //Sets up the password
                String host = HOST;
                Connection conn = DriverManager.getConnection(host,username,password);                                  //Tries to connect to database, if fails go to catch

                PreparedStatement statement = conn.prepareStatement("SELECT "                                                             //Sets up a statement ready to execute, seperated for readability
                            + "* FROM schoolnea.student WHERE Student.StudentID = ?");                                  //
                statement.setInt(1, StudentDropdown.getSelectedIndex());                                                                                
                ResultSet sresult = statement.executeQuery();                                                           //Executes the statement
                sresult.next();                                                                                         // Sets cursor to start of the results

                StudentIDInput.setText(sresult.getString(1));                                                           //Sets fields to match the database 
                FirstNameInput.setText(sresult.getString(2));
                SurnameInput.setText(sresult.getString(3));
                DoBInput.setText(sresult.getString(4));
                GenderInput.setText(sresult.getString(5));
                EmailAddressInput.setText(sresult.getString(6));
                BlockASubjectInput.setText(sresult.getString(11));
                BlockBSubjectInput.setText(sresult.getString(12));
                BlockCSubjectInput.setText(sresult.getString(13));
                BlockDSubjectInput.setText(sresult.getString(14));
                BlockESubjectInput.setText(sresult.getString(15));

                ConductPointsInput.setValue(sresult.getInt(10));
                MeritPointsInput.setValue(sresult.getInt(9));
                YearInput.setValue(sresult.getInt(7));
                TimetableIDInput.setValue(sresult.getInt(8));

                conn.close();                                                                                        //Will close the connection after it is finished
            }
            catch(SQLException e){
                System.out.println(e.getMessage());                                                                //Output error to console
            }
        }
    }
    
    private void generateParentFields(){
        
        if(ParentDropdown.getSelectedIndex()==0){
            clearAllParentsFields();
        }
        else{
            try{
                String username = USERNAME;                                                                      //Sets up the database connection
                String password = PASSWORD;                                                                      //Sets up the password
                String host = HOST;                                                  //
                Connection conn = DriverManager.getConnection(host,username,password);                                   //Tries to connect to database, if fails go to catch

                PreparedStatement statement = 
                        conn.prepareStatement("SELECT * FROM schoolnea.parent WHERE"                                     //Seperated for readability
                                + " ParentID = ?");

                String ParentIDString = ParentDropdown.getSelectedItem().toString();                                    //Simple linear search to find the index of the colon : in the text
                int index = 0;
                for(int i = 0; i<ParentIDString.length(); i++){                                                         //Loop through each char in the string
                    if(ParentIDString.charAt(i) == ':'){                                                                //If char is  : then
                        index = i;                                                                                      //Set index to current index of the colon : 
                    }
                }
                int ParentID = Integer.parseInt(ParentIDString.substring(0, index));                                    //Get substring of start of string to the colon and convert this to int
                statement.setInt(1, ParentID);                                                                          //Specify which ParentID to search for
                ResultSet result = statement.executeQuery();                                                            //Execute query
                result.next();                                                                                          //Go to set of results

                ParentIDInputP.setText(result.getString(1));
                FirstNameInputP.setText(result.getString(2));
                SurnameInputP.setText(result.getString(3));
                GenderInputP.setText(result.getString(4));
                EmailAddressInputP.setText(result.getString(6));
                PhoneNumberInputP.setText(result.getString(7));
                RelationInputP.setText(result.getString(8));

                conn.close();                                                                                        //Will close the connection after it is finished
            }
            catch(SQLException e){
                System.out.println(e.getMessage());                                                                //Output error to console
            }
        }
    }
    
    private void generateReports(){
        try{
            String username = USERNAME;                                                                      //Sets up the database connection
            String password = PASSWORD;                                                                      //Sets up the password
            String host = HOST;                                                  //
            Connection conn = DriverManager.getConnection(host,username,password);                                   //Tries to connect to database, if fails go to catch
            
            PreparedStatement statement = conn.prepareStatement("SELECT "                                                             //Sets up a statement ready to execute, seperated for readability
                        + "StudentReports.Date,StudentReports.Reason,Staff.FirstName,"
                    + "Staff.Surname FROM schoolnea.studentreports,schoolnea.staff "
                    + "WHERE StudentReports.StudentID = ? AND StudentReports.StaffID"
                    + " = Staff.StaffID");
            statement.setInt(1, StudentDropdown.getSelectedIndex());
            ResultSet reportresult = statement.executeQuery();
            
            DefaultTableModel model = (DefaultTableModel) SReportTable.getModel();
            model.setRowCount(0);
            while(reportresult.next()){
                model.addRow(new Object[]{reportresult.getDate(1),reportresult.getString(2),reportresult.getString(3)+" "+reportresult.getString(4)});
            }
            
            
            conn.close();                                                                                        //Will close the connection after it is finished
        }
        catch(SQLException e){
            System.out.println(e.getMessage());                                                                //Output error to console
        }
    }
    
    
    private void rebuildStudentDropdown(){
        StudentDropdown.removeAllItems();
        StudentDropdown.addItem("Select Student");
        
        try{
            String username = USERNAME;                                                                      //Sets up the database connection
            String password = PASSWORD;                                                                      //Sets up the password
            String host = HOST;
            Connection conn = DriverManager.getConnection(host,username,password);                                  //Tries to connect to database, if fails go to catch
            PreparedStatement statement = conn.prepareStatement("SELECT "                                           //Sets up a statement ready to execute, seperated for readability
                        + "StudentID,FirstName,Surname FROM schoolnea.student ORDER BY StudentID");                                    //
            ResultSet result = statement.executeQuery();                                                            //Executes the statement
            
            while(result.next()){                                                                                 //While there are still results in the data from SQL statement
                int ID = result.getInt(1);                                                                        //Iterate through each row and record name and surname and id
                String FirstN = result.getString(2);                                                             
                String SurN = result.getString(3);                                                                //And add them to the ComboBox to choose from
                StudentDropdown.addItem(ID+": "+FirstN+" "+SurN);
            }
            
            conn.close();                                                                                        //Will close the connection after it is finished
        }
        catch(SQLException e){
            System.out.println(e.getMessage());                                                                //Output error to console
        }
    }
    
    
    private void rebuildParentDropdown(){
        ParentDropdown.removeAllItems();                                                                        //Remove original parents in the dropdown list to replace with new ones
        ParentDropdown.addItem("Select Parent");
        try{
            String username = USERNAME;                                                                      //Sets up the database connection
            String password = PASSWORD;                                                                      //Sets up the password
            String host = HOST;
            Connection conn = DriverManager.getConnection(host,username,password);                                  //Tries to connect to database, if fails go to catch
            PreparedStatement statement = 
                    conn.prepareStatement("SELECT parent.ParentID,parent.FirstName,parent.Surname"                 //SQL statement getting list of all parents for Selected Student
                    + " FROM schoolnea.parent,schoolnea.parentstudentlt WHERE"                                     //Seperated for readability
                            + " parentstudentlt.StudentID = ? AND parent.ParentID"
                            + " = parentstudentlt.ParentID ORDER BY StudentID");
            statement.setInt(1, StudentDropdown.getSelectedIndex());                                            //Specify which Student ID to go for (Student dropdown ordered by ID)
            ResultSet initresult = statement.executeQuery();                                                        //Execute Statement
            while(initresult.next()){                                                                               //Will loop through each parent
                int ID = initresult.getInt(1);                                                                      //
                String FirstN = initresult.getString(2);                                                            //
                String SurN = initresult.getString(3);                                                              //
                ParentDropdown.addItem(ID+": "+FirstN+" "+SurN);                                                    //And then create a dropdown menu for them
            }
            
            conn.close();                                                                                        //Will close the connection after it is finished
        }
        catch(SQLException e){
            System.out.println(e.getMessage());                                                                //Output error to console
        }
    }
    
    private void newStudent(){
        int newid = StudentDropdown.getItemCount();
        StudentIDInput.setText(String.valueOf(newid));
        StudentDropdown.addItem(String.valueOf(newid)+": New Student");
        StudentDropdown.setSelectedIndex(newid);
        clearAllStudentFields();
        clearAllParentsFields();
        setEditButton(true);
        newstudent = true;
    }
    
    private void cancelNewStudent(){
        int lastindex = StudentDropdown.getItemCount() - 1;
        StudentDropdown.removeItemAt(lastindex);
        setEditButton(false);
        newstudent = false;
    }
    
    private void saveStudentEdits(){
        try{
            String username = USERNAME;                                                                      //Sets up the database connection
            String password = PASSWORD;                                                                      //Sets up the password
            String host = HOST;                                                  //
            Connection conn = DriverManager.getConnection(host,username,password);                                   //Tries to connect to database, if fails go to catch
            
            int id = Integer.parseInt(StudentIDInput.getText());
            String sql = "";
            if(newstudent){
                sql = "INSERT INTO schoolnea.student(FirstName, Surname,"
                        + " DoB, Gender, EmailAddress, Year, TimetableID, MeritPoints,"
                        + " ConductPoints, BlockASubject, BlockBSubject, BlockCSubject,"
                        + " BlockDSubject, BlockESubject, StudentID) values (?, ?, ?, ?, ?, ?,"
                        + " ?, ?, ?, ?, ?, ?, ?, ?, ?)";
            }
            else{
                sql = "UPDATE schoolnea.student SET FirstName = ?, Surname = ?, DoB = ?,"
                        + " Gender = ?, EmailAddress = ?, Year = ?, TimetableID = ?,"
                        + " MeritPoints = ?, ConductPoints = ?, BlockASubject = ?,"
                        + " BlockBSubject = ?, BlockCSubject = ?, BlockDSubject = ?,"
                        + " BlockESubject = ? WHERE StudentID = ?";
            }
            PreparedStatement statement = conn.prepareStatement(sql);
            
            statement.setString(1, FirstNameInput.getText());
            statement.setString(2, SurnameInput.getText());
            statement.setString(3, DoBInput.getText());
            statement.setString(4, GenderInput.getText());
            statement.setString(5, EmailAddressInput.getText());
            statement.setInt(6, (int) YearInput.getValue());
            statement.setInt(7, (int) TimetableIDInput.getValue());
            statement.setInt(8, (int) MeritPointsInput.getValue());
            statement.setInt(9, (int) ConductPointsInput.getValue());
            statement.setString(10, BlockASubjectInput.getText());
            statement.setString(11, BlockBSubjectInput.getText());
            statement.setString(12, BlockCSubjectInput.getText());
            statement.setString(13, BlockDSubjectInput.getText());
            statement.setString(14, BlockESubjectInput.getText());
            statement.setInt(15, Integer.parseInt(StudentIDInput.getText()));
            
            statement.executeUpdate();
            
            newstudent = false;
            rebuildStudentDropdown();
            StudentDropdown.setSelectedIndex(id);
            
            conn.close();                                                                                        //Will close the connection after it is finished
        }
        catch(SQLException e){
            System.out.println(e.getMessage());                                                                //Output error to console
        }
    }
    
    private void clearAllStudentFields(){
        for(int i = 1; i < Stf.size(); i++){                                                //Starts at 1 as we dont want to ever enable editing of StudentID
            Stf.get(i).setText("");
        }
        for(javax.swing.JSpinner Sp : Ssp){                                                 //Same priniciple of the ideas above but different way of structuring for loop
            Sp.setValue(0);
        }                                                                                   
        clearAllParentsFields();
    }
    
    private void clearAllParentsFields(){
        for(int i = 0; i < Ptf.size(); i++){                                                //Starts at 1 as we dont want to ever enable editing of ParentID
            Ptf.get(i).setText(null);  
        }  
    }

    private void changeStateStudentFields(boolean state){
        for(int i = 1; i < Stf.size(); i++){                                                //Starts at 1 as we dont want to ever enable editing of StudentID
            Stf.get(i).setEditable(state);
        }
        for(javax.swing.JSpinner Sp : Ssp){                                                 //Same priniciple of the ideas above but different way of structuring for loop
            ((JSpinner.DefaultEditor) Sp.getEditor()).getTextField().setEditable(state);    //Each Spinner has its own textfield that we need to access and edit.
                Sp.getComponent(1).setEnabled(state);                                       //We also need to disable the use of the arrows
                Sp.getComponent(0).setEnabled(state);
        }                                                                                   
    }
    
    private void changeStateParentsFields(boolean state){                                                                                   
        for(int i = 1; i < Ptf.size(); i++){                                                //Starts at 1 as we dont want to ever enable editing of ParentID
            Ptf.get(i).setEditable(state);  
        }  
    }
    
    
    
    
    
    
    
    
    //public CardLayout cl = (CardLayout) MainView.getLayout();
    
    final String USERNAME = "AdminAccount";
    final String PASSWORD = "AdminPassword";
    final String HOST = "jdbc:mysql://localhost:3306/schoolnea";
    
    private boolean initdone = false;
    private boolean loaded = false;
    private boolean newstudent = false;
    
    //private ArrayList<String> stack = new ArrayList<String>();         //Creating a stack from an array list
    //private int stackpointer = -1;                                     //Creating a pointer for the stack to use to know where the top element is
    
    private static Stack customstack = new Stack();
    
    private ArrayList<javax.swing.JTextField> Stf = new ArrayList<javax.swing.JTextField>();
    private ArrayList<javax.swing.JSpinner> Ssp = new ArrayList<javax.swing.JSpinner>();
    private ArrayList<javax.swing.JTextField> Ptf = new ArrayList<javax.swing.JTextField>();
    private ArrayList<javax.swing.JSpinner> Psp = new ArrayList<javax.swing.JSpinner>();
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackButton;
    private javax.swing.JLabel BlockASubject;
    private javax.swing.JTextField BlockASubjectInput;
    private javax.swing.JLabel BlockASubkect;
    private javax.swing.JLabel BlockBSubject;
    private javax.swing.JTextField BlockBSubjectInput;
    private javax.swing.JLabel BlockCSubject;
    private javax.swing.JTextField BlockCSubjectInput;
    private javax.swing.JLabel BlockDSubject;
    private javax.swing.JTextField BlockDSubjectInput;
    private javax.swing.JLabel BlockESubject;
    private javax.swing.JTextField BlockESubjectInput;
    private javax.swing.JLabel ConductPoints;
    private javax.swing.JSpinner ConductPointsInput;
    private javax.swing.JLabel DoB;
    private javax.swing.JTextField DoBInput;
    private javax.swing.JToggleButton EditButton;
    private javax.swing.JTextField EmailAddressInput;
    private javax.swing.JTextField EmailAddressInputP;
    private javax.swing.JLabel EmailAddressP;
    private javax.swing.JLabel FirstName;
    private javax.swing.JTextField FirstNameInput;
    private javax.swing.JTextField FirstNameInputP;
    private javax.swing.JLabel FirstNameP;
    private javax.swing.JButton FowardButton;
    private javax.swing.JLabel Gender;
    private javax.swing.JTextField GenderInput;
    private javax.swing.JTextField GenderInputP;
    private javax.swing.JLabel GenderP;
    private javax.swing.JButton HomeButton;
    private javax.swing.JPanel MainMenuPage;
    private javax.swing.JPanel MainView;
    private javax.swing.JPanel MenuBar;
    private javax.swing.JLabel MeritPoints;
    private javax.swing.JSpinner MeritPointsInput;
    private javax.swing.JButton NewParentButton;
    private javax.swing.JButton NewStudentButton;
    private javax.swing.JComboBox<String> ParentDropdown;
    private javax.swing.JTextField ParentIDInputP;
    private javax.swing.JLabel ParentIDP;
    private javax.swing.JTextField PhoneNumberInputP;
    private javax.swing.JLabel PhoneNumberP;
    private javax.swing.JButton RegisterButton;
    private javax.swing.JPanel RegisterPage;
    private javax.swing.JTable RegisterTable;
    private javax.swing.JTextField RelationInputP;
    private javax.swing.JLabel RelationP;
    private javax.swing.JTable SReportTable;
    private javax.swing.JButton SaveButton;
    private javax.swing.JButton SearchButton;
    private javax.swing.ButtonGroup SearchGroup;
    private javax.swing.JPanel SearchPage;
    private javax.swing.JTable SearchTable;
    private javax.swing.JComboBox<String> StudentDropdown;
    private javax.swing.JLabel StudentID;
    private javax.swing.JTextField StudentIDInput;
    private javax.swing.JButton StudentProfileButton;
    private javax.swing.JPanel StudentProfilePage;
    private javax.swing.JLabel Surname;
    private javax.swing.JTextField SurnameInput;
    private javax.swing.JTextField SurnameInputP;
    private javax.swing.JLabel SurnameP;
    private javax.swing.JButton TimetableButton;
    private javax.swing.JLabel TimetableID;
    private javax.swing.JSpinner TimetableIDInput;
    private javax.swing.JPanel TimetablePage;
    private javax.swing.JTable TimetableTable;
    private javax.swing.JLabel TitleLabel;
    private javax.swing.JLabel Year;
    private javax.swing.JSpinner YearInput;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables



}
